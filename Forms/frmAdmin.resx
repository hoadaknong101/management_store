<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerDigitalClock.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1XgAVdR4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4
        AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVeABV1HgA/8VwAP+pXgD/1HgA/7dm
        AP+3ZgD/1HgA/6leAP/FcAD/xXAA/6leAP/UeAD/1HgA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAqGEN/6ZgDv+lXw7/o14P/6FdD/+gXBD/nlsQ/5xbEf+bWhH/mVkS/6xjDP/UeAD/xXAA/6le
        AP/UeAD/t2YA/7dmAP/UeAD/qV4A/8VwAP/FcAD/qV4A/9R4AP/UeAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACoYQ3/pmAO/6VfDv+jXg//oV0P/6BcEP+eWxD/nFsR/5taEf+ZWRL/rGMM/9R4
        AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhhDf+mYA7/mlcJ/4VIAP+hXQ//jk4F/41OBf+cWxH/hUgA/5JT
        DP+oXwj/1HgA/75rAP+UUAD/1HgA/6leAP+pXgD/1HgA/5RQAP++awD/vmsA/5RQAP/UeAD/1HgA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqGEN/6ZgDv+iXQz/mVcK/6FdD/+aWAz/mFcM/5xb
        Ef+TVAv/l1cQ/6phC//UeAD/zXQA/75rAP/UeAD/xXAA/8VwAP/UeAD/vmsA/810AP/NdAD/vmsA/9R4
        AP/UeAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoYQ3/pmAO/6JdDP+ZVwr/oV0P/5pY
        DP+YVwz/nFsR/5NUC/+XVxD/qGMN/8d3Cv/IeAv/x3cL/8d3C//HeAz/xncM/9F+CtbZhAnB2YQJwdmE
        CcHZhAnB2YQJwdmECcEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhhDf+mYA7/mlcJ/4VI
        AP+hXQ//jk4F/41OBf+cWxH/hUgA/5JTDP+saxD/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ/+Kb
        Gf/imxn/4psZ/+KbGf/imxn/4psZ/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqGEN/6Zg
        Dv+lXw7/o14P/6FdD/+gXBD/nlsQ/5xbEf+bWhH/mVkS/7BvFP/imxn/3JUX/9CIFf/imxn/1o8X/9aP
        F//imxn/0IgV/9yVF//clRf/0IgV/+KbGf/imxn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADOdQHGzXUDxs11A8bNdAPGzXQDxs10A8bNdAPGy3QDxst0A8bLdAPG1IQL2eKbGf/QiBX/q2IN/+Kb
        Gf+9dRH/vXUR/+KbGf+rYg3/0IgV/9CIFf+rYg3/4psZ/+KbGf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANR4AP/UeAD/zXQA/75rAP/UeAD/xXAA/8VwAP/UeAD/vmsA/810AP/UgQj/4psZ/+Kb
        Gf/imxn/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1HgA/9R4AP++awD/lFAA/9R4AP+pXgD/qV4A/9R4AP+UUAD/vmsA/8p7
        CP/imxn/1o8X/711Ef/imxn/yYIU/8mCFP/imxn/vXUR/9aPF//Wjxf/vXUR/+KbGf/imxn/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4
        AP/UeAD/2IQI/+KbGf/Wjxf/vXUR/+KbGf/JghT/yYIU/+KbGf+9dRH/1o8X/9aPF/+9dRH/4psZ/+Kb
        Gf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANR4AP/UeAD/xXAA/6leAP/UeAD/t2YA/7dm
        AP/UeAD/qV4A/8VwAP/Ofwj/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ/+Kb
        Gf/imxn/4psZ/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1HgA/9R4AP/FcAD/qV4A/9R4
        AP+3ZgD/t2YA/9R4AP+pXgD/xXAA/85/CP/imxn/0IgV/6tiDf/imxn/vXUR/711Ef/imxn/q2IN/9CI
        Ff/QiBX/q2IN/+KbGf/imxn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUeAD/1HgA/9R4
        AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/2IQI/+KbGf/clRf/0IgV/+KbGf/Wjxf/1o8X/+Kb
        Gf/QiBX/3JUX/9yVF//QiBX/4psZ/+KbGf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANR4
        AP/UeAD/vmsA/5RQAP/UeAD/qV4A/6leAP/UeAD/lFAA/75rAP/XfwX/4poZ/+KbGf/imxn/4psZ/+Kb
        Gf/imxn/4psZ/+KbGf/imxn/4psZ/+KbGf/imxn/4psZ1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1HgA/9R4AP/NdAD/vmsA/9R4AP/FcAD/xXAA/9R4AP++awD/zXQA/9R4AP/XfgX/2IQI/9iE
        CP/YhAj/2IQI/9iECP/bjg6O4ZwYVeGcGFXhnBhV4ZwYVeKbGk/emxYXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADUeAD/1HgA/810AP++awD/1HgA/8VwAP/FcAD/1HgA/75rAP/NdAD/zXQA/75r
        AP/UeAD/xXAA/8VwAP/UeAD/1HgA/9V4AFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANR4AP/UeAD/vmsA/5RQAP/UeAD/qV4A/6leAP/UeAD/lFAA/75r
        AP++awD/lFAA/9R4AP+pXgD/qV4A/9R4AP/UeAD/1XgAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4
        AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/VeABVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOGaGFbejxH/3o8R/96PEf/ejxH/3o8R/96P
        Ef/ejxH/3o8R/96PEf/ejxH/3o8R/96PEf/ejxH/3o8R/96PEf/ejxH/3o8R/96TFLQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ZsYVN+TEv7fkhL/35IS/9+S
        Ev/fkhL/35IS/9+SEv/fkhL/35IS/9+SEv/fkhL/35IS/9+SEv/fkhL/35IS/9+SEv/fkhL/35UUtQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA03cAntR4
        APnUeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4AP/UeAD/1HgA/9R4
        ANbOeQAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////+AA///gAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAD//AAB//wAAf/8AAH//AA
        A//wAAP/8AAH//////////////////////8=
</value>
  </data>
</root>